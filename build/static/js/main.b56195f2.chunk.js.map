{"version":3,"sources":["AgentLogs/GetAgentLogs.js","App.js","index.js"],"names":["StyledLabel","styled","label","ButtonContainer","div","StyledInput","input","CANARY","INTEG_TEST","withRouter","getLogs","event","sourceOfLogs","data","file","target","files","agentLogs","csvData","Papa","parse","download","header","skipEmptyLines","forceUniformNewline","step","row","push","complete","results","chunks","console","log","length","filter","message","includes","s","t","chunkMessages","map","a","i","newLog","indexOf","slice","k","agentLog","j","replace","logs","reducer","previousValue","currentValue","reduce","m","blob","Blob","type","saveAs","htmlFor","className","id","name","accept","onChange","App","path","component","GetAgentLogs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56195f2.chunk.js","sourcesContent":["import { withRouter } from 'react-router-dom';\nimport Papa from 'papaparse';\nimport { saveAs } from 'file-saver';\nimport styled from 'styled-components';\n\n\nconst StyledLabel = styled.label`\n  border: 2px solid #326881;\n  border-radius: 10px;\n  display: inline-block;\n  padding: 10px 12px;\n  cursor: pointer;\n  background-color: #8be3e9;\n  margin: 50px auto;\n  height: 50px;\n  display: flex;\n  align-items: center;\n`\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: inline-flex;\n  align-content: space-around;\n  justify-content: space-around;\n`\n\nconst StyledInput = styled.input`\n  display: none;\n`\nconst CANARY = \"canary\";\nconst INTEG_TEST = \"integ\";\n\nfunction GetAgentLogs() {\n\n  const getLogs = (event, sourceOfLogs) => {\n    var csvInput = event.target;\n    var file = csvInput.files[0];\n    let data;\n    let agentLogs = [];\n    \n    var csvData=[];\n    \n    Papa.parse(file, {\n      download: true,\n      header: true,\n      skipEmptyLines: true,\n      forceUniformNewline: true,\n      step: function(row) {\n          csvData.push(row.data);\n      },\n      complete: function(results) {\n        console.log('Complete', csvData.length, 'records.'); \n        data = csvData;\n        let chunks;\n        if (sourceOfLogs === CANARY) {\n          chunks = data.filter(event => event.message.includes('Agent log chunk'));\n        } else if (sourceOfLogs === INTEG_TEST) {\n          let s = 0;\n          chunks = [];\n          for (let t = 0; t < data.length; t++ ) {\n            if(data[t].message.includes('Agent log chunk')) {\n              chunks[s] = data[t+1]; \n              s++\n            }\n          }\n        }\n\n        let chunkMessages = chunks.map( a => {\n            let newLog = a?.message;\n            if (newLog) {\n              let i;\n              if (sourceOfLogs === CANARY) {\n                i = newLog.indexOf('log chunk:') + 10; \n              } else if (sourceOfLogs === INTEG_TEST) {\n                i = (newLog.indexOf('log chunk:') > -1) ? newLog.indexOf('log chunk:') + 10 : 0; \n              }\n              return newLog.slice(i);\n            } else {\n            return \"\";\n            }\n            \n        });\n        let k = 0;\n        while(k < chunkMessages.length && !chunkMessages[k].includes('\"_logs\"')) {\n        k++;\n        }\n        for (let i = k; i < chunkMessages.length; i++) {\n\n        let agentLog = [];\n        let j = i;\n        \n        do {\n            chunkMessages[j] = chunkMessages[j].replace(/\\n/g, \"\");\n            chunkMessages[j] = chunkMessages[j].replace(/\\\\ /g, \"\\\\\\\\ \");\n            agentLog.push(chunkMessages[j]);\n            j++;\n        } while (j < chunkMessages.length && !chunkMessages[j].includes('\"_logs\"'));\n        agentLogs.push(agentLog);\n        \n        i = j - 1;\n        }\n        const reducer = (previousValue, currentValue) => previousValue + currentValue;\n        let logs;\n        for (let i = 0; i < agentLogs.length; i++) {\n        \n        logs = agentLogs[i].reduce(reducer);\n        let k = logs.indexOf('\"_logs\": ') + 9;\n        let m;\n        if (sourceOfLogs === CANARY) {\n          m = logs.indexOf('\"_rolledLogs\"') - 5;\n        } else if (sourceOfLogs === INTEG_TEST) {\n          m = logs.indexOf('\"_rolledLogs\"') - 6;\n        }\n\n        logs = logs.slice(k, m);\n        var blob = new Blob([logs], { type: \"text/plain;charset=utf-8\" });\n        saveAs(blob, `agent_log_${i}.txt`);\n        }\n      }\n    });\n  }\n\n    return (\n      <>\n      <ButtonContainer>\n        <StyledLabel htmlFor=\"file-upload\" className=\"custom-file-upload\">\n            Choose csv to get txt file(s) with CANARY agent logs\n        </StyledLabel>\n        <StyledInput id=\"file-upload\" name=\"file-upload\" type=\"file\" accept=\".csv\" onChange={event => getLogs(event, CANARY)}></StyledInput>\n      </ButtonContainer>\n      <ButtonContainer>\n        <StyledLabel htmlFor=\"file-upload-2\" className=\"custom-file-upload-2\">\n            Choose csv to get txt file(s) with agent logs from INTEG TEST csv\n        </StyledLabel>\n        <StyledInput id=\"file-upload-2\" name=\"file-upload-2\" type=\"file\" accept=\".csv\" onChange={event => getLogs(event, INTEG_TEST)}></StyledInput>\n        \n      </ButtonContainer>\n      </>\n      \n    );\n  }\n  \nexport default withRouter(GetAgentLogs);","import React from 'react';\nimport GetAgentLogs from './AgentLogs/GetAgentLogs';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        {/* A <Routes> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/get-log-chunk\" component={GetAgentLogs} />\n          <Route path=\"/\" component={GetAgentLogs} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n/* <Route exact path=\"/custom-softphone\" component={CustomSoftphone} /> */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}